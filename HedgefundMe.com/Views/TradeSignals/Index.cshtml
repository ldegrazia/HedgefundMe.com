@using HedgefundMe.com;
@model  HedgefundMe.com.ViewModels.TradeSignalViewModel
@{
    ViewBag.Title = "New Trade Signals";
}
<div class="container rounded">
    <div class="row blue">
        <div class="col-sm-12" style="color:white;">
            <img class="pull-left smallimg" title="Welcome" alt="Welcome" src="@Url.Content("~/images/signals.png")" />
            <h4>&nbsp;&nbsp;New Trade Signals</h4>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12"> 
            <p>
                Signals ran by @Model.LastSignalFetch.LastSignalFetchBy at @Model.LastSignalFetch.SignalFetchDateEasterTime() 
            </p>
            <p>
                @Html.ActionLink("Trade Signal History", "History", "TradeSignals", null, new { title = "View all trade signals acted on." }) |
                @Html.ActionLink("Latest Long Trades", "LatestTrades", "Api", null, new { title = "View the latest new Long trade signals as XML." }) |
                @Html.ActionLink("Latest Short Trades", "LatestShortTrades", "Api", null, new { title = "View the latest new Short trade signals as XML." })
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12" style="color:white">
            <h4>Longs (@Model.Data.Where(t => t.Strategy == Strings.Strategies.IntradayMomentumLong).Count())</h4>
         
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered">
                    <tr>
                        <th>
                            Ticker
                        </th>
                        <th>
                            Action
                        </th>
                        <th>
                            Time
                        </th>
                        <th>
                            Shares
                        </th>
                        <th>
                            Price
                        </th>

                        <th>
                            Stop 
                        </th>
                        <th>
                            Target 
                        </th>

                        <th>
                            Value
                        </th>

                        <th>
                            Details
                        </th>

                    </tr>

                    @foreach (var item in Model.Data)
                    {
                        if (item.Strategy != Strings.Strategies.IntradayMomentumLong)
                        {
                            continue;
                        }
                        <tr style="color:@FinanceHelper.GetColor(item.Details) !important">
                            <td>
                                <a href="/Blotter/SignalDetails?id=@item.TradeId" title="Click for trade details">@item.Ticker</a>
                                
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Action)
                            </td>
                            <td>
                                @item.EasterTimeDate()
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Shares)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StopPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TargetPrice)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Value)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Details)
                            </td>


                        </tr>
                    }

                </table>
                </div>
            </div>
        </div>
    <div class="row">
        <div class="col-sm-12" style="color:white">
            <h4>Shorts (@Model.Data.Where(t => t.Strategy == Strings.Strategies.IntradayMomentumShort).Count())</h4>
         
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered">
                    <tr >
                        <th>
                            Ticker
                        </th>
                        <th>
                            Action
                        </th>
                        <th>
                            Time
                        </th>
                        <th>
                            Shares
                        </th>
                        <th>
                            Price
                        </th>

                        <th>
                            Stop 
                        </th>
                        <th>
                            Target
                        </th>

                        <th>
                            Value
                        </th>

                        <th>
                            Details
                        </th>

                    </tr>

                    @foreach (var item in Model.Data)
{
    if (item.Strategy != Strings.Strategies.IntradayMomentumShort)
    {
        continue;
    }
    <tr style="color:@FinanceHelper.GetColor(item.Details) !important">
        <td>
            <a href="/Blotter/SignalDetails?id=@item.TradeId" title="Click for trade details">@item.Ticker</a>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Action)
        </td>
        <td>
           @item.EasterTimeDate()
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Shares)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StopPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TargetPrice)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Value)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Details)
        </td>


    </tr>
}

                </table>
            </div>
        </div>
    </div>
</div>